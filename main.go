package main

import (
	"librebucket/internal/db"
	"librebucket/web"
	"log"
	"os"
	"path/filepath"
)

const sveltigoMiddlewareFile = `package dist

import (
	"embed"

	"github.com/HazelnutParadise/sveltigo"
)

//go:embed */**
var fsys embed.FS

// Sveltigo is the main middleware to register to your router. It generated by the build step.
var Sveltigo = sveltigo.New(&fsys)
`

func main() {
	if err := db.InitDB("users.db"); err != nil {
		log.Fatalf("Failed to initialize user DB: %v", err)
		return
	}

	// if err := exec.Command("npx", "golte").Run(); err != nil {
	//	log.Fatalf("Failed to build files for Svelte to work properly: %v. Please install Node.js and run npm install in this directory.", err)
	//	return
	// }

	dir, err := os.Getwd()
	if err != nil {
		log.Println(err)
	}
	log.Println(dir)

	embedFilePath := filepath.Join(dir, "dist/embed.go")
	if _, err := os.Stat(embedFilePath); os.IsNotExist(err) {
		log.Fatalf("Embed file not found: %v", err)
		return
	}

	// change content of embed file
	content := sveltigoMiddlewareFile
	os.WriteFile(embedFilePath, []byte(content), 0644)

	web.StartServer()
}
